// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CardOverview /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_default
    count="1"
    linkTo="/"
    text="hello"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef(Styled(CardBody))>
        <ForwardRef(styled.h2)>
          1
        </ForwardRef(styled.h2)>
        <ForwardRef(Styled(CardText))>
          hello
        </ForwardRef(Styled(CardText))>
        <ForwardRef(Styled(Button))
          alt="true"
          onClick={[Function]}
        >
          View
        </ForwardRef(Styled(Button))>
        <ForwardRef(styled.div)>
          <FaAngleLeft />
          <FaAngleRight />
        </ForwardRef(styled.div)>
      </ForwardRef(Styled(CardBody))>,
      "count": "1",
      "text": "hello",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef(styled.h2)>
            1
          </ForwardRef(styled.h2)>,
          <ForwardRef(Styled(CardText))>
            hello
          </ForwardRef(Styled(CardText))>,
          <ForwardRef(Styled(Button))
            alt="true"
            onClick={[Function]}
          >
            View
          </ForwardRef(Styled(Button))>,
          <ForwardRef(styled.div)>
            <FaAngleLeft />
            <FaAngleRight />
          </ForwardRef(styled.div)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "1",
          },
          "ref": null,
          "rendered": "1",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": false,
              "rules": Array [
                "
  font-size: 70px;
  font-weight: 500;
  ",
                "
    @media (max-width: ",
                "991.98px",
                ") {
      ",
                "
    font-size: 18px;
    margin: 0 5px;
  ",
                "
    }
  ",
                "
",
              ],
            },
            "displayName": "styled.h2",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "h2",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "hello",
          },
          "ref": null,
          "rendered": "hello",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  font-size: 24px;
  ",
                "
    @media (max-width: ",
                "991.98px",
                ") {
      ",
                "
    flex: 3;
    text-align: left;
    font-size: 16px;
    margin: 0;
  ",
                "
    }
  ",
                "
",
              ],
            },
            "displayName": "Styled(CardText)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alt": "true",
            "children": "View",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "View",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dnqmqq",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
    @media (max-width: ",
                "991.98px",
                ") {
      ",
                "
    font-size: 16px !important;
  ",
                "
    }
  ",
                "
",
              ],
            },
            "displayName": "Styled(Button)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-dnqmqq",
            "target": [Function],
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FaAngleLeft />,
              <FaAngleRight />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": false,
              "rules": Array [
                "
  flex: 1;

  ",
                "
    @media (min-width: ",
                "992px",
                ") {
      ",
                "
    display: none;
  ",
                "
    }
  ",
                "

  ",
                "
    @media (max-width: ",
                "991.98px",
                ") {
      ",
                "
    display: none !important;
  ",
                "
    }
  ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htoDjs",
          "isStatic": false,
          "rules": Array [
            "
  padding: 28px;
  ",
            "
    @media (min-width: ",
            "992px",
            ") {
      ",
            "
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  ",
            "
    }
  ",
            "
  ",
            "
    @media (max-width: ",
            "991.98px",
            ") {
      ",
            "
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    padding: 10px !important;
  ",
            "
    }
  ",
            "
",
          ],
        },
        "displayName": "Styled(CardBody)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htoDjs",
        "target": [Function],
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bZQynM",
        "isStatic": false,
        "rules": Array [
          "
  text-align: center;
  box-shadow: 0px 0px 37px rgba(0, 0, 0, 0.1);
  border: 0 !important;
  border-radius: 9px !important;
  ",
          "
    @media (min-width: ",
          "992px",
          ") {
      ",
          "
    height: 100%;
  ",
          "
    }
  ",
          "
  ",
          "
    @media (max-width: ",
          "991.98px",
          ") {
      ",
          "
    display: ",
          [Function],
          ";
    margin-bottom: 10px;
  ",
          "
    }
  ",
          "
",
        ],
      },
      "displayName": "Styled(Card)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bZQynM",
      "target": [Function],
      "toString": [Function],
      "usesTheme": false,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef(Styled(CardBody))>
          <ForwardRef(styled.h2)>
            1
          </ForwardRef(styled.h2)>
          <ForwardRef(Styled(CardText))>
            hello
          </ForwardRef(Styled(CardText))>
          <ForwardRef(Styled(Button))
            alt="true"
            onClick={[Function]}
          >
            View
          </ForwardRef(Styled(Button))>
          <ForwardRef(styled.div)>
            <FaAngleLeft />
            <FaAngleRight />
          </ForwardRef(styled.div)>
        </ForwardRef(Styled(CardBody))>,
        "count": "1",
        "text": "hello",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(styled.h2)>
              1
            </ForwardRef(styled.h2)>,
            <ForwardRef(Styled(CardText))>
              hello
            </ForwardRef(Styled(CardText))>,
            <ForwardRef(Styled(Button))
              alt="true"
              onClick={[Function]}
            >
              View
            </ForwardRef(Styled(Button))>,
            <ForwardRef(styled.div)>
              <FaAngleLeft />
              <FaAngleRight />
            </ForwardRef(styled.div)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "1",
            },
            "ref": null,
            "rendered": "1",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-EHOje",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: 70px;
  font-weight: 500;
  ",
                  "
    @media (max-width: ",
                  "991.98px",
                  ") {
      ",
                  "
    font-size: 18px;
    margin: 0 5px;
  ",
                  "
    }
  ",
                  "
",
                ],
              },
              "displayName": "styled.h2",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-EHOje",
              "target": "h2",
              "toString": [Function],
              "usesTheme": false,
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "hello",
            },
            "ref": null,
            "rendered": "hello",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gzVnrw",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: 24px;
  ",
                  "
    @media (max-width: ",
                  "991.98px",
                  ") {
      ",
                  "
    flex: 3;
    text-align: left;
    font-size: 16px;
    margin: 0;
  ",
                  "
    }
  ",
                  "
",
                ],
              },
              "displayName": "Styled(CardText)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gzVnrw",
              "target": [Function],
              "toString": [Function],
              "usesTheme": false,
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "alt": "true",
              "children": "View",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "View",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dnqmqq",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  "
    @media (max-width: ",
                  "991.98px",
                  ") {
      ",
                  "
    font-size: 16px !important;
  ",
                  "
    }
  ",
                  "
",
                ],
              },
              "displayName": "Styled(Button)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-dnqmqq",
              "target": [Function],
              "toString": [Function],
              "usesTheme": false,
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <FaAngleLeft />,
                <FaAngleRight />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-iwsKbI",
                "isStatic": false,
                "rules": Array [
                  "
  flex: 1;

  ",
                  "
    @media (min-width: ",
                  "992px",
                  ") {
      ",
                  "
    display: none;
  ",
                  "
    }
  ",
                  "

  ",
                  "
    @media (max-width: ",
                  "991.98px",
                  ") {
      ",
                  "
    display: none !important;
  ",
                  "
    }
  ",
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-iwsKbI",
              "target": "div",
              "toString": [Function],
              "usesTheme": false,
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htoDjs",
            "isStatic": false,
            "rules": Array [
              "
  padding: 28px;
  ",
              "
    @media (min-width: ",
              "992px",
              ") {
      ",
              "
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  ",
              "
    }
  ",
              "
  ",
              "
    @media (max-width: ",
              "991.98px",
              ") {
      ",
              "
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    padding: 10px !important;
  ",
              "
    }
  ",
              "
",
            ],
          },
          "displayName": "Styled(CardBody)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htoDjs",
          "target": [Function],
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": false,
          "rules": Array [
            "
  text-align: center;
  box-shadow: 0px 0px 37px rgba(0, 0, 0, 0.1);
  border: 0 !important;
  border-radius: 9px !important;
  ",
            "
    @media (min-width: ",
            "992px",
            ") {
      ",
            "
    height: 100%;
  ",
            "
    }
  ",
            "
  ",
            "
    @media (max-width: ",
            "991.98px",
            ") {
      ",
            "
    display: ",
            [Function],
            ";
    margin-bottom: 10px;
  ",
            "
    }
  ",
            "
",
          ],
        },
        "displayName": "Styled(Card)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": [Function],
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
